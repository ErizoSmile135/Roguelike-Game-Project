{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/core/GameManager.ts"],"names":["GameManager","EntityManager","RenderSystem","RoomSystem","constructor","entityManager","prefabs","roomTemplate","gameRoot","initializeRoomTemplate","templates","initializeSystems","renderSystem","roomSystem","setPrefabs","getPrefab","name","setGameRoot"],"mappings":";;;wHAMaA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJJC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;6BAEIH,W,GAAN,MAAMA,WAAN,CAAkB;AASrBI,QAAAA,WAAW,GAAE;AAAA,eARLC,aAQK;AAAA,eAPLC,OAOK,GAPgC,EAOhC;AAAA,eANLC,YAMK,GAN0B,EAM1B;AAAA,eALLC,QAKK,GALY,IAKZ;AACT,eAAKH,aAAL,GAAqB;AAAA;AAAA,+CAArB;AACH;;AAEDI,QAAAA,sBAAsB,CAACC,SAAD,EAA4B;AAC9C,eAAKH,YAAL,GAAoBG,SAApB;AACH;;AAEDC,QAAAA,iBAAiB,GAAE;AACf,eAAKC,YAAL,GAAoB;AAAA;AAAA,4CAAiB,KAAKP,aAAtB,EAAqC,KAAKC,OAA1C,EAAmD,KAAKE,QAAxD,CAApB;AACA,eAAKK,UAAL,GAAkB;AAAA;AAAA,wCAAe,KAAKR,aAApB,EAAmC,KAAKE,YAAxC,CAAlB;AACH;;AAEDO,QAAAA,UAAU,CAACR,OAAD,EAAoC;AAC1C,eAAKA,OAAL,GAAeA,OAAf;AACH;;AAEDS,QAAAA,SAAS,CAACC,IAAD,EAAiC;AACtC,iBAAO,KAAKV,OAAL,CAAaU,IAAb,KAAsB,IAA7B;AACH;;AAEDC,QAAAA,WAAW,CAACT,QAAD,EAAgB;AACvB,eAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAhCoB,O","sourcesContent":["import { Prefab, Node } from \"cc\";\nimport { PrefabKey, RoomTemplate } from \"../data/types\";\nimport { EntityManager } from \"./EntityManager\";\nimport { RenderSystem } from \"../systems/RenderSystem\";\nimport { RoomSystem } from \"../systems/RoomSystem\";\n\nexport class GameManager {\n    private entityManager: EntityManager;\n    private prefabs: Record<PrefabKey, Prefab> = {} as Record<PrefabKey, Prefab>;\n    private roomTemplate: RoomTemplate[] = [];\n    private gameRoot: Node = null!;\n\n    public renderSystem!: RenderSystem;\n    public roomSystem!: RoomSystem;\n\n    constructor(){\n        this.entityManager = new EntityManager();\n    }\n\n    initializeRoomTemplate(templates: RoomTemplate[]) {\n        this.roomTemplate = templates;\n    }\n\n    initializeSystems(){\n        this.renderSystem = new RenderSystem(this.entityManager, this.prefabs, this.gameRoot);\n        this.roomSystem = new RoomSystem(this.entityManager, this.roomTemplate);\n    }\n\n    setPrefabs(prefabs: Record<PrefabKey, Prefab>){\n        this.prefabs = prefabs;\n    }\n\n    getPrefab(name: PrefabKey): Prefab | null {\n        return this.prefabs[name] || null;\n    }\n\n    setGameRoot(gameRoot: Node){\n        this.gameRoot = gameRoot;\n    }\n}\n\n"]}