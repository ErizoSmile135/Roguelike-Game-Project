{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/systems/MovementSystem.ts"],"names":["MovementSystem","AttackIntent","MoveIntent","Position","EnemyTag","eventBus","findPathInTemplate","constructor","em","currentRoom","RoomNumber","dirs","x","y","update","dt","movers","getEntityWithComponent","actorId","mi","getComponent","target","pos","console","log","path","removeComponent","length","emit","entity","occupants","findEntitiesAtPosition","enemy","find","id","hasComponent","addComponent","result","p","push"],"mappings":"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","sourcesContent":["import { AttackIntent } from \"../components/intent/AttackIntent\";\nimport { MoveIntent } from \"../components/intent/MoveIntent\";\nimport { Position } from \"../components/Position\";\nimport { EnemyTag } from \"../components/Tag/EnemyTag\";\nimport { EntityManager } from \"../core/EntityManager\";\nimport { eventBus } from \"../core/EventBus\";\nimport { findPathInTemplate } from \"../core/Pathfinding\";\nimport { RoomTemplate } from \"../data/types\";\n\nexport class MovementSystem {\n    constructor(\n        private em: EntityManager,\n        private currentRoom: RoomTemplate[]\n    ) { }\n\n    private RoomNumber: number = 0;\n\n    private dirs = [\n        { x:  1, y:  0 },\n        { x: -1, y:  0 },\n        { x:  0, y:  1 },\n        { x:  0, y: -1 },\n    ];\n\n    public update(dt: number) {\n        //console.log('[MovementSystem] update, dt=', dt);\n        const movers = this.em.getEntityWithComponent(MoveIntent);\n        for (const actorId of movers) {\n            const mi = this.em.getComponent(actorId, MoveIntent)!;\n            const { x, y } = mi.target;\n            const pos = this.em.getComponent(actorId, Position)!;\n            console.log(`[MovementSystem] actor=${actorId} start=(${pos.x},${pos.y}) goal=(${mi.target.x},${mi.target.y})`);\n\n            const path = findPathInTemplate(this.currentRoom[this.RoomNumber], pos, mi.target);\n            pos.x = mi.target.x;\n            pos.y = mi.target.y;\n            /**/console.log('[MovementSystem] path for', actorId, '=', path);\n            /**/console.log('[MovementSystem] processing MoveIntent for', actorId, 'goal=', mi.target);\n            this.em.removeComponent(actorId, MoveIntent);\n\n            if (path && path.length) {\n                /***/console.log('[MovementSystem] emit movePath for', actorId);\n                eventBus.emit(\"movePath\", { entity: actorId, path });\n            }\n\n            const occupants = this.findEntitiesAtPosition(x, y);\n\n            // если есть враг — планируем атаку\n            const enemy = occupants.find(id => this.em.hasComponent(id, EnemyTag));\n            if (enemy != null) {\n                this.em.addComponent(actorId, new AttackIntent(enemy), AttackIntent);\n                continue;\n            }\n\n            // если есть ловушка\n            /*const trap = occupants.find(id => this.entityManager.hasComponent(id, TrapComponent));\n            if (trap != null) {\n                this.entityManager.addComponent(actor, new TrapIntent(trap), TrapIntent);\n                continue;\n            }*/\n\n            // …другие проверки: двери → TransitionIntent и т.п.\n        }\n    }\n\n    private findEntitiesAtPosition(x: number, y: number): number[] {\n        const result: number[] = [];\n        for (const id of this.em.getEntityWithComponent(Position)) {\n            const p = this.em.getComponent(id, Position)!;\n            if (p.x === x && p.y === y) result.push(id);\n        }\n        return result;\n    }\n}\n"]}