{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/core/EntityManager.ts"],"names":["EntityManager","nextEntityId","components","Map","createEntity","entityId","addEcsComponent","component","componentType","has","set","get","getEntityWithComponent","entityWithComponent","forEach","push","getEcsComponent","removeEcsComponent","delete","hasEcsComponent"],"mappings":";;;iBAEaA,a;;;;;;;;;;;;;+BAAAA,a,GAAN,MAAMA,aAAN,CAAoB;AAAA;AAAA,eAEfC,YAFe,GAEQ,CAFR;AAAA,eAGfC,UAHe,GAG0C,IAAIC,GAAJ,EAH1C;AAAA;;AAKvBC,QAAAA,YAAY,GAAU;AAClB,cAAMC,QAAQ,GAAG,KAAKJ,YAAL,EAAjB;AACA,iBAAOI,QAAP;AACH;;AAEDC,QAAAA,eAAe,CAAID,QAAJ,EAAsBE,SAAtB,EAAoCC,aAApC,EAAqE;AAAA;;AAChF,cAAI,CAAC,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBD,aAApB,CAAL,EAAwC;AACpC,iBAAKN,UAAL,CAAgBQ,GAAhB,CAAoBF,aAApB,EAAmC,IAAIL,GAAJ,EAAnC;AACH;;AACD,uCAAKD,UAAL,CAAgBS,GAAhB,CAAoBH,aAApB,2CAAoCE,GAApC,CAAwCL,QAAxC,EAAkDE,SAAlD;AACH;;AAEDK,QAAAA,sBAAsB,CAAIJ,aAAJ,EAA+C;AAAA;;AACjE,cAAIK,mBAA6B,GAAG,EAApC;AACA,wCAAKX,UAAL,CAAgBS,GAAhB,CAAoBH,aAApB,4CAAoCM,OAApC,CAA4C,CAACP,SAAD,EAAYF,QAAZ,KAAyB;AACjEQ,YAAAA,mBAAmB,CAACE,IAApB,CAAyBV,QAAzB;AACH,WAFD;AAGA,iBAAOQ,mBAAP;AACH;;AAEDG,QAAAA,eAAe,CAAIX,QAAJ,EAAsBG,aAAtB,EAAiE;AAAA;;AAC5E,iBAAO,+BAAKN,UAAL,CAAgBS,GAAhB,CAAoBH,aAApB,4CAAoCG,GAApC,CAAwCN,QAAxC,MAAqD,IAA5D;AACH;;AAEDY,QAAAA,kBAAkB,CAAIZ,QAAJ,EAAsBG,aAAtB,EAAuD;AAAA;;AACrE,wCAAKN,UAAL,CAAgBS,GAAhB,CAAoBH,aAApB,4CAAoCU,MAApC,CAA2Cb,QAA3C;AACH;;AAEDc,QAAAA,eAAe,CAAId,QAAJ,EAAsBG,aAAtB,EAAiE;AAAA;;AAC5E,mEAAO,KAAKN,UAAL,CAAgBS,GAAhB,CAAoBH,aAApB,CAAP,qBAAO,sBAAoCC,GAApC,CAAwCJ,QAAxC,CAAP,oCAA4D,KAA5D;AACH;;AAnCsB,O","sourcesContent":["type ComponentClass<T> = { new (...args: any[]): T };\n\nexport class EntityManager {\n    \n    private nextEntityId: number = 0;\n    private components: Map<ComponentClass<any>, Map<number, any>> = new Map();\n\n    createEntity(): number{\n        const entityId = this.nextEntityId++;\n        return entityId;\n    }\n\n    addEcsComponent<T>(entityId: number, component: T, componentType: ComponentClass<T>){\n        if (!this.components.has(componentType)){\n            this.components.set(componentType, new Map());\n        }\n        this.components.get(componentType)?.set(entityId, component);\n    }\n\n    getEntityWithComponent<T>(componentType: ComponentClass<T>): number[]{\n        let entityWithComponent: number[] = [];\n        this.components.get(componentType)?.forEach((component, entityId) => {\n            entityWithComponent.push(entityId);\n        })  \n        return entityWithComponent;\n    }\n       \n    getEcsComponent<T>(entityId: number, componentType: ComponentClass<T>): T | null{\n        return this.components.get(componentType)?.get(entityId) || null;\n    }\n\n    removeEcsComponent<T>(entityId: number, componentType: ComponentClass<T>){\n        this.components.get(componentType)?.delete(entityId);\n    }\n\n    hasEcsComponent<T>(entityId: number, componentType: ComponentClass<T>): boolean {\n        return this.components.get(componentType)?.has(entityId) ?? false;\n    }\n}\n\n"]}