{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/systems/MovementSystem.ts"],"names":["MovementSystem","AttackIntent","MoveIntent","Position","EnemyTag","constructor","entityManager","update","dt","movers","getEntityWithComponent","actor","mi","getComponent","x","y","target","pos","removeComponent","occupants","findEntitiesAtPosition","enemy","find","id","hasComponent","addComponent","result","p","push"],"mappings":";;;4EAMaA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANJC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Q,iBAAAA,Q;;;;;;;gCAGIJ,c,GAAN,MAAMA,cAAN,CAAqB;AACtBK,QAAAA,WAAW,CAASC,aAAT,EAAuC;AAAA,eAA9BA,aAA8B,GAA9BA,aAA8B;AAAE;;AAE7CC,QAAAA,MAAM,CAACC,EAAD,EAAa;AACxB,cAAMC,MAAM,GAAG,KAAKH,aAAL,CAAmBI,sBAAnB;AAAA;AAAA,uCAAf;;AACA,eAAK,IAAMC,KAAX,IAAoBF,MAApB,EAA4B;AACxB,gBAAMG,EAAE,GAAG,KAAKN,aAAL,CAAmBO,YAAnB,CAAgCF,KAAhC;AAAA;AAAA,yCAAX;AACA,gBAAM;AAAEG,cAAAA,CAAF;AAAKC,cAAAA;AAAL,gBAAWH,EAAE,CAACI,MAApB;AACA,gBAAMC,GAAG,GAAG,KAAKX,aAAL,CAAmBO,YAAnB,CAAgCF,KAAhC;AAAA;AAAA,qCAAZ;AACAM,YAAAA,GAAG,CAACH,CAAJ,GAAQA,CAAR;AACAG,YAAAA,GAAG,CAACF,CAAJ,GAAQA,CAAR;AACA,iBAAKT,aAAL,CAAmBY,eAAnB,CAAmCP,KAAnC;AAAA;AAAA,0CANwB,CAQxB;;AACA,gBAAMQ,SAAS,GAAG,KAAKC,sBAAL,CAA4BN,CAA5B,EAA+BC,CAA/B,CAAlB,CATwB,CAWxB;;AACA,gBAAMM,KAAK,GAAGF,SAAS,CAACG,IAAV,CAAeC,EAAE,IAAI,KAAKjB,aAAL,CAAmBkB,YAAnB,CAAgCD,EAAhC;AAAA;AAAA,qCAArB,CAAd;;AACA,gBAAIF,KAAK,IAAI,IAAb,EAAmB;AACf,mBAAKf,aAAL,CAAmBmB,YAAnB,CAAgCd,KAAhC,EAAuC;AAAA;AAAA,gDAAiBU,KAAjB,CAAvC;AAAA;AAAA;AACA;AACH,aAhBuB,CAkBxB;;AACA;AACZ;AACA;AACA;AACA;AAEY;;AACH;AACJ;;AAEOD,QAAAA,sBAAsB,CAACN,CAAD,EAAYC,CAAZ,EAAiC;AAC3D,cAAMW,MAAgB,GAAG,EAAzB;;AACA,eAAK,IAAMH,EAAX,IAAiB,KAAKjB,aAAL,CAAmBI,sBAAnB;AAAA;AAAA,mCAAjB,EAAsE;AAClE,gBAAMiB,CAAC,GAAG,KAAKrB,aAAL,CAAmBO,YAAnB,CAAgCU,EAAhC;AAAA;AAAA,qCAAV;AACA,gBAAII,CAAC,CAACb,CAAF,KAAQA,CAAR,IAAaa,CAAC,CAACZ,CAAF,KAAQA,CAAzB,EAA4BW,MAAM,CAACE,IAAP,CAAYL,EAAZ;AAC/B;;AACD,iBAAOG,MAAP;AACH;;AAzCuB,O","sourcesContent":["import { AttackIntent } from \"../components/intent/AttackIntent\";\nimport { MoveIntent } from \"../components/intent/MoveIntent\";\nimport { Position } from \"../components/Position\";\nimport { EnemyTag } from \"../components/Tag/EnemyTag\";\nimport { EntityManager } from \"../core/EntityManager\";\n\nexport class MovementSystem {\n      constructor(private entityManager: EntityManager) {}\n\n      public update(dt: number) {\n        const movers = this.entityManager.getEntityWithComponent(MoveIntent);\n        for (const actor of movers) {\n            const mi = this.entityManager.getComponent(actor, MoveIntent)!;\n            const { x, y } = mi.target;\n            const pos = this.entityManager.getComponent(actor, Position)!;\n            pos.x = x;\n            pos.y = y;\n            this.entityManager.removeComponent(actor, MoveIntent);\n            \n            // теперь «ветвим» по сущностям на этой клетке\n            const occupants = this.findEntitiesAtPosition(x, y);\n            \n            // если есть враг — планируем атаку\n            const enemy = occupants.find(id => this.entityManager.hasComponent(id, EnemyTag));\n            if (enemy != null) {\n                this.entityManager.addComponent(actor, new AttackIntent(enemy), AttackIntent);\n                continue;\n            }\n\n            // если есть ловушка\n            /*const trap = occupants.find(id => this.entityManager.hasComponent(id, TrapComponent));\n            if (trap != null) {\n                this.entityManager.addComponent(actor, new TrapIntent(trap), TrapIntent);\n                continue;\n            }*/\n\n            // …другие проверки: двери → TransitionIntent и т.п.\n        }\n    }\n\n    private findEntitiesAtPosition(x: number, y: number): number[] {\n        const result: number[] = [];\n        for (const id of this.entityManager.getEntityWithComponent(Position)) {\n            const p = this.entityManager.getComponent(id, Position)!;\n            if (p.x === x && p.y === y) result.push(id);\n        }\n        return result;\n    }\n}\n"]}