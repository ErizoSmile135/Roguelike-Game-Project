{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/systems/MovementSystem.ts"],"names":["MovementSystem","AttackIntent","MoveIntent","Position","EnemyTag","eventBus","constructor","entityManager","update","dt","movers","getEntityWithComponent","actor","mi","getComponent","x","y","target","pos","emit","entity","newPos","removeComponent","occupants","findEntitiesAtPosition","enemy","find","id","hasComponent","addComponent","result","p","push"],"mappings":";;;sFAOaA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,Q,iBAAAA,Q;;;;;;;gCAEIL,c,GAAN,MAAMA,cAAN,CAAqB;AACxBM,QAAAA,WAAW,CAASC,aAAT,EAAuC;AAAA,eAA9BA,aAA8B,GAA9BA,aAA8B;AAAE;;AAE7CC,QAAAA,MAAM,CAACC,EAAD,EAAa;AACtB,cAAMC,MAAM,GAAG,KAAKH,aAAL,CAAmBI,sBAAnB;AAAA;AAAA,uCAAf;;AACA,eAAK,IAAMC,KAAX,IAAoBF,MAApB,EAA4B;AACxB,gBAAMG,EAAE,GAAG,KAAKN,aAAL,CAAmBO,YAAnB,CAAgCF,KAAhC;AAAA;AAAA,yCAAX;AACA,gBAAM;AAAEG,cAAAA,CAAF;AAAKC,cAAAA;AAAL,gBAAWH,EAAE,CAACI,MAApB;AACA,gBAAMC,GAAG,GAAG,KAAKX,aAAL,CAAmBO,YAAnB,CAAgCF,KAAhC;AAAA;AAAA,qCAAZ;AACAM,YAAAA,GAAG,CAACH,CAAJ,GAAQA,CAAR;AACAG,YAAAA,GAAG,CAACF,CAAJ,GAAQA,CAAR;AAEA;AAAA;AAAA,sCAASG,IAAT,CAAc,iBAAd,EAAiC;AAC7BC,cAAAA,MAAM,EAAER,KADqB;AAE7BS,cAAAA,MAAM,EAAE;AAAEN,gBAAAA,CAAC,EAAEG,GAAG,CAACH,CAAT;AAAYC,gBAAAA,CAAC,EAAEE,GAAG,CAACF;AAAnB;AAFqB,aAAjC;AAKA,iBAAKT,aAAL,CAAmBe,eAAnB,CAAmCV,KAAnC;AAAA;AAAA;AAEA,gBAAMW,SAAS,GAAG,KAAKC,sBAAL,CAA4BT,CAA5B,EAA+BC,CAA/B,CAAlB,CAdwB,CAgBxB;;AACA,gBAAMS,KAAK,GAAGF,SAAS,CAACG,IAAV,CAAeC,EAAE,IAAI,KAAKpB,aAAL,CAAmBqB,YAAnB,CAAgCD,EAAhC;AAAA;AAAA,qCAArB,CAAd;;AACA,gBAAIF,KAAK,IAAI,IAAb,EAAmB;AACf,mBAAKlB,aAAL,CAAmBsB,YAAnB,CAAgCjB,KAAhC,EAAuC;AAAA;AAAA,gDAAiBa,KAAjB,CAAvC;AAAA;AAAA;AACA;AACH,aArBuB,CAuBxB;;AACA;AACZ;AACA;AACA;AACA;AAEY;;AACH;AACJ;;AAEOD,QAAAA,sBAAsB,CAACT,CAAD,EAAYC,CAAZ,EAAiC;AAC3D,cAAMc,MAAgB,GAAG,EAAzB;;AACA,eAAK,IAAMH,EAAX,IAAiB,KAAKpB,aAAL,CAAmBI,sBAAnB;AAAA;AAAA,mCAAjB,EAAsE;AAClE,gBAAMoB,CAAC,GAAG,KAAKxB,aAAL,CAAmBO,YAAnB,CAAgCa,EAAhC;AAAA;AAAA,qCAAV;AACA,gBAAII,CAAC,CAAChB,CAAF,KAAQA,CAAR,IAAagB,CAAC,CAACf,CAAF,KAAQA,CAAzB,EAA4Bc,MAAM,CAACE,IAAP,CAAYL,EAAZ;AAC/B;;AACD,iBAAOG,MAAP;AACH;;AA9CuB,O","sourcesContent":["import { AttackIntent } from \"../components/intent/AttackIntent\";\nimport { MoveIntent } from \"../components/intent/MoveIntent\";\nimport { Position } from \"../components/Position\";\nimport { EnemyTag } from \"../components/Tag/EnemyTag\";\nimport { EntityManager } from \"../core/EntityManager\";\nimport { eventBus } from \"../core/EventBus\";\n\nexport class MovementSystem {\n    constructor(private entityManager: EntityManager) {}\n\n    public update(dt: number) {\n        const movers = this.entityManager.getEntityWithComponent(MoveIntent);\n        for (const actor of movers) {\n            const mi = this.entityManager.getComponent(actor, MoveIntent)!;\n            const { x, y } = mi.target;\n            const pos = this.entityManager.getComponent(actor, Position)!;\n            pos.x = x;\n            pos.y = y;\n\n            eventBus.emit(\"positionChanged\", { \n                entity: actor, \n                newPos: { x: pos.x, y: pos.y } \n            });\n\n            this.entityManager.removeComponent(actor, MoveIntent);\n\n            const occupants = this.findEntitiesAtPosition(x, y);\n\n            // если есть враг — планируем атаку\n            const enemy = occupants.find(id => this.entityManager.hasComponent(id, EnemyTag));\n            if (enemy != null) {\n                this.entityManager.addComponent(actor, new AttackIntent(enemy), AttackIntent);\n                continue;\n            }\n\n            // если есть ловушка\n            /*const trap = occupants.find(id => this.entityManager.hasComponent(id, TrapComponent));\n            if (trap != null) {\n                this.entityManager.addComponent(actor, new TrapIntent(trap), TrapIntent);\n                continue;\n            }*/\n\n            // …другие проверки: двери → TransitionIntent и т.п.\n        }\n    }\n\n    private findEntitiesAtPosition(x: number, y: number): number[] {\n        const result: number[] = [];\n        for (const id of this.entityManager.getEntityWithComponent(Position)) {\n            const p = this.entityManager.getComponent(id, Position)!;\n            if (p.x === x && p.y === y) result.push(id);\n        }\n        return result;\n    }\n}\n"]}