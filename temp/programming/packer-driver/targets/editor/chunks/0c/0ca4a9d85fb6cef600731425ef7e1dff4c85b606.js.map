{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/systems/MovementSystem.ts"],"names":["MovementSystem","MoveIntent","Position","eventBus","findPathInTemplate","constructor","em","currentRoom","RoomNumber","update","dt","actor","getEntityWithComponent","mi","getComponent","start","goal","target","path","removeComponent","emit","entity"],"mappings":";;;kFASaA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARJC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AAGAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,kB,iBAAAA,kB;;;;;;;gCAGIJ,c,GAAN,MAAMA,cAAN,CAAqB;AACxBK,QAAAA,WAAW,CACCC,EADD,EAECC,WAFD,EAGT;AAAA,eAEMC,UAFN,GAE2B,CAF3B;AAAA,eAFUF,EAEV,GAFUA,EAEV;AAAA,eADUC,WACV,GADUA,WACV;AAAG;;AAIEE,QAAAA,MAAM,CAACC,EAAD,EAAa;AACtB,eAAK,MAAMC,KAAX,IAAoB,KAAKL,EAAL,CAAQM,sBAAR;AAAA;AAAA,uCAApB,EAAgE;AAC5D,kBAAMC,EAAE,GAAG,KAAKP,EAAL,CAAQQ,YAAR,CAAqBH,KAArB;AAAA;AAAA,yCAAX;AACA,kBAAMI,KAAK,GAAG,KAAKT,EAAL,CAAQQ,YAAR,CAAqBH,KAArB;AAAA;AAAA,qCAAd;AACA,kBAAMK,IAAI,GAAGH,EAAE,CAACI,MAAhB,CAH4D,CAK5D;;AACA,kBAAMC,IAAI,GAAG;AAAA;AAAA,0DAAmB,KAAKX,WAAL,CAAiB,KAAKC,UAAtB,CAAnB,EAAsDO,KAAtD,EAA6DC,IAA7D,KAAsE,EAAnF,CAN4D,CAQ5D;;AACA,iBAAKV,EAAL,CAAQa,eAAR,CAAwBR,KAAxB;AAAA;AAAA,0CAT4D,CAW5D;;AACA;AAAA;AAAA,sCAASS,IAAT,CAAc,UAAd,EAA0B;AAAEC,cAAAA,MAAM,EAAEV,KAAV;AAAiBO,cAAAA;AAAjB,aAA1B;AACH,WAdqB,CAgBtB;;AACA;AACR;AACA;AACA;AACA;AAEQ;;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAzC4B,O","sourcesContent":["import { AttackIntent } from \"../components/intent/AttackIntent\";\nimport { MoveIntent } from \"../components/intent/MoveIntent\";\nimport { Position } from \"../components/Position\";\nimport { EnemyTag } from \"../components/Tag/EnemyTag\";\nimport { EntityManager } from \"../core/EntityManager\";\nimport { eventBus } from \"../core/EventBus\";\nimport { findPathInTemplate } from \"../core/Pathfinding\";\nimport { RoomTemplate } from \"../data/types\";\n\nexport class MovementSystem {\n    constructor(\n        private em: EntityManager,\n        private currentRoom: RoomTemplate[]\n    ) { }\n\n    private RoomNumber: number = 0;\n\n    public update(dt: number) {\n        for (const actor of this.em.getEntityWithComponent(MoveIntent)) {\n            const mi = this.em.getComponent(actor, MoveIntent)!;\n            const start = this.em.getComponent(actor, Position)!;\n            const goal = mi.target;\n\n            // 1) находим полный путь\n            const path = findPathInTemplate(this.currentRoom[this.RoomNumber], start, goal) || [];\n\n            // 2) удаляем intent — дальше займётся RenderSystem\n            this.em.removeComponent(actor, MoveIntent);\n\n            // 3) эмитим даже пустой путь, чтобы всегда было событие\n            eventBus.emit(\"movePath\", { entity: actor, path });\n        }\n\n        // если есть ловушка\n        /*const trap = occupants.find(id => this.entityManager.hasComponent(id, TrapComponent));\n        if (trap != null) {\n            this.entityManager.addComponent(actor, new TrapIntent(trap), TrapIntent);\n            continue;\n        }*/\n\n        // …другие проверки: двери → TransitionIntent и т.п.\n    }\n\n    /*private findEntitiesAtPosition(x: number, y: number): number[] {\n        const result: number[] = [];\n        for (const id of this.em.getEntityWithComponent(Position)) {\n            const p = this.em.getComponent(id, Position)!;\n            if (p.x === x && p.y === y) result.push(id);\n        }\n    return result;\n    }*/\n}\n"]}