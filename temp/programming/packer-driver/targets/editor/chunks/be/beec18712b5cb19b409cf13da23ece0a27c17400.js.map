{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/systems/TrapSystem.ts"],"names":["_decorator","eventBus","Position","Trap","ccclass","TrapSystem","constructor","em","on","onMoveComplete","bind","payload","actor","entity","pos","getComponent","traps","getEntityWithComponent","filter","trapId","trapPos","x","y","trap","console","log","damage","emit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,Q,iBAAAA,Q;;AAEAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,I,iBAAAA,I;;;;;;;;;OAEH;AAAEC,QAAAA;AAAF,O,GAAcJ,U;;4BAGPK,U,WADZD,OAAO,CAAC,YAAD,C,gBAAR,MACaC,UADb,CACwB;AACtBC,QAAAA,WAAW,CAASC,EAAT,EAA4B;AAAA,eAAnBA,EAAmB,GAAnBA,EAAmB;AACrC;AACA;AAAA;AAAA,oCAASC,EAAT,CAAY,cAAZ,EAA4B,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA5B;AACD;;AAEOD,QAAAA,cAAc,CAACE,OAAD,EAA8B;AAClD,gBAAMC,KAAK,GAAGD,OAAO,CAACE,MAAtB,CADkD,CAElD;;AACA,gBAAMC,GAAG,GAAG,KAAKP,EAAL,CAAQQ,YAAR,CAAqBH,KAArB;AAAA;AAAA,mCAAZ;AACA,cAAI,CAACE,GAAL,EAAU,OAJwC,CAMlD;;AACA,gBAAME,KAAK,GAAG,KAAKT,EAAL,CAAQU,sBAAR;AAAA;AAAA,4BACXC,MADW,CACJC,MAAM,IAAI;AAChB,kBAAMC,OAAO,GAAG,KAAKb,EAAL,CAAQQ,YAAR,CAAqBI,MAArB;AAAA;AAAA,qCAAhB;AACA,mBAAO,CAAAC,OAAO,QAAP,YAAAA,OAAO,CAAEC,CAAT,MAAeP,GAAG,CAACO,CAAnB,IAAwB,CAAAD,OAAO,QAAP,YAAAA,OAAO,CAAEE,CAAT,MAAeR,GAAG,CAACQ,CAAlD;AACD,WAJW,CAAd,CAPkD,CAalD;;AACA,eAAK,MAAMH,MAAX,IAAqBH,KAArB,EAA4B;AAC1B,kBAAMO,IAAI,GAAG,KAAKhB,EAAL,CAAQQ,YAAR,CAAqBI,MAArB;AAAA;AAAA,6BAAb;AACAK,YAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBb,KAAM,mBAAkBO,MAAO,QAAOI,IAAI,CAACG,MAAO,MAArF;AACA;AAAA;AAAA,sCAASC,IAAT,CAAc,eAAd,EAA+B;AAC7Bd,cAAAA,MAAM,EAAED,KADqB;AAE7BW,cAAAA,IAAI,EAAEJ,MAFuB;AAG7BO,cAAAA,MAAM,EAAEH,IAAI,CAACG;AAHgB,aAA/B;AAKD;AACF;;AA7BqB,O","sourcesContent":["// systems/TrapSystem.ts\r\nimport { _decorator }      from 'cc';\r\nimport { eventBus }        from '../core/EventBus';\r\nimport { EntityManager }   from '../core/EntityManager';\r\nimport { Position }        from '../components/Position';\r\nimport { Trap } from '../components/Trap';\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('TrapSystem')\r\nexport class TrapSystem {\r\n  constructor(private em: EntityManager) {\r\n    // подписываемся на окончание движения\r\n    eventBus.on('moveComplete', this.onMoveComplete.bind(this));\r\n  }\r\n\r\n  private onMoveComplete(payload: { entity: number }) {\r\n    const actor = payload.entity;\r\n    // получаем позицию, куда встал актор\r\n    const pos = this.em.getComponent(actor, Position);\r\n    if (!pos) return;\r\n\r\n    // ищем все сущности-ловушки на этой клеткеs\r\n    const traps = this.em.getEntityWithComponent(Trap)\r\n      .filter(trapId => {\r\n        const trapPos = this.em.getComponent(trapId, Position);\r\n        return trapPos?.x === pos.x && trapPos?.y === pos.y;\r\n      });\r\n\r\n    // для каждой найденной ловушки эмитим событие\r\n    for (const trapId of traps) {\r\n      const trap = this.em.getComponent(trapId, Trap)!;\r\n      console.log(`[TrapSystem] entity ${actor} triggered trap ${trapId} for ${trap.damage} dmg`);\r\n      eventBus.emit('trapTriggered', {\r\n        entity: actor,\r\n        trap: trapId,\r\n        damage: trap.damage,\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}