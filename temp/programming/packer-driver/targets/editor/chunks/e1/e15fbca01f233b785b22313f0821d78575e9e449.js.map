{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/core/GameManager.ts"],"names":["GameManager","EntityManager","RenderSystem","RoomSystem","InputSystem","PlayerTag","Health","Damage","InputComponent","Position","constructor","entityManager","prefabs","roomTemplate","gameRoot","playerId","createPlayer","id","createEntity","addComponent","initializeRoomTemplate","templates","initializeSystems","renderSystem","roomSystem","inputSystem","setPrefabs","getPrefab","name","setGameRoot","getPlayerEntityId","handleInput","input","inputId","onTileTapped","position"],"mappings":"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","sourcesContent":["import { Prefab, Node } from \"cc\";\nimport { PrefabKey, RoomTemplate } from \"../data/types\";\nimport { EntityManager } from \"./EntityManager\";\nimport { RenderSystem } from \"../systems/RenderSystem\";\nimport { RoomSystem } from \"../systems/RoomSystem\";\nimport { InputSystem } from \"../systems/InputSystem\";\nimport { PlayerTag } from \"../components/PlayerTag\";\nimport { Health } from \"../components/Health\";\nimport { Damage } from \"../components/Damage\";\nimport { InputComponent } from \"../components/InputComponent\";\nimport { Position } from \"../components/Position\";\n\nexport class GameManager {\n    private entityManager: EntityManager;\n    private prefabs: Record<PrefabKey, Prefab> = {} as Record<PrefabKey, Prefab>;\n    private roomTemplate: RoomTemplate[] = [];\n    private gameRoot: Node = null!;\n\n    public renderSystem!: RenderSystem;\n    public roomSystem!: RoomSystem;\n    public inputSystem!: InputSystem;\n\n    private playerId: number | null = null;\n\n    constructor(){\n        this.entityManager = new EntityManager();\n    }\n\n    createPlayer() {\n        const id = this.entityManager.createEntity();\n        this.entityManager.addComponent(id, new PlayerTag(), PlayerTag);\n        this.entityManager.addComponent(id, new Position(0, 0), Position);\n        this.entityManager.addComponent(id, new Health(100), Health);\n        this.entityManager.addComponent(id, new Damage(10), Damage);\n        this.playerId = id;\n    }\n\n    /*  Паттерн синглтона через геттер (я использовал экспорт в Game)\n    private static _instance: GameManager;\n    static get instance(): GameManager {\n      if (!this._instance) {\n        this._instance = new GameManager();\n      }\n      return this._instance;\n    }\n    private constructor() {}*/\n\n    initializeRoomTemplate(templates: RoomTemplate[]) {\n        this.roomTemplate = templates;\n    }\n\n    initializeSystems(){\n        this.renderSystem = new RenderSystem(this.entityManager, this.prefabs, this.gameRoot);\n        this.roomSystem = new RoomSystem(this.entityManager, this.roomTemplate, this.playerId);\n        this.inputSystem = new InputSystem(this.entityManager, this.playerId);\n    }\n\n    setPrefabs(prefabs: Record<PrefabKey, Prefab>){\n        this.prefabs = prefabs;\n    }\n\n    getPrefab(name: PrefabKey): Prefab | null {\n        return this.prefabs[name] || null;\n    }\n\n    setGameRoot(gameRoot: Node){\n        this.gameRoot = gameRoot;\n    }\n\n    getPlayerEntityId(): number{\n       return this.playerId;\n    }\n\n    handleInput(input: InputComponent) {\n        const inputId = this.entityManager.createEntity();\n        this.entityManager.addComponent(inputId, input, InputComponent);\n        //this.inputSystem.handleInput(input);\n    }\n\n    onTileTapped(position: Position) {\n        const input = new InputComponent(this.playerId, 'move', position);\n        this.entityManager.addComponent(this.playerId, input, InputComponent);\n    }\n}\n\n"]}