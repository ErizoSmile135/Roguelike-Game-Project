{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/systems/InputSystem.ts"],"names":["InputSystem","InputComponent","MoveIntent","constructor","entityManager","playerId","update","dt","eid","getEntityWithComponent","entity","target","getComponent","addComponent","removeEntity"],"mappings":";;;0DAQaA,W;;;;;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,c,iBAAAA,c;;AAEAC,MAAAA,U,iBAAAA,U;;;;;;;6BAKIF,W,GAAN,MAAMA,WAAN,CAAkB;AACvBG,QAAAA,WAAW,CACDC,aADC,EAEDC,QAFC,EAGT;AAAA,eAFQD,aAER,GAFQA,aAER;AAAA,eADQC,QACR,GADQA,QACR;AAAG;;AAEEC,QAAAA,MAAM,CAACC,EAAD,EAAa;AACxB,eAAK,MAAMC,GAAX,IAAkB,KAAKJ,aAAL,CAAmBK,sBAAnB;AAAA;AAAA,+CAAlB,EAA6E;AAC3E,kBAAM;AAAEC,cAAAA,MAAF;AAAUC,cAAAA;AAAV,gBAAqB,KAAKP,aAAL,CAAmBQ,YAAnB,CAAgCJ,GAAhC;AAAA;AAAA,iDAA3B;AACA,iBAAKJ,aAAL,CAAmBS,YAAnB,CAAgCH,MAAhC,EAAwC;AAAA;AAAA,0CAAeC,MAAf,CAAxC;AAAA;AAAA;AACA,iBAAKP,aAAL,CAAmBU,YAAnB,CAAgCN,GAAhC;AACD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOG;;AAxDsB,O","sourcesContent":["import { EntityManager } from \"../core/EntityManager\";\r\nimport { InputComponent } from \"../components/core/InputComponent\";\r\nimport { InputNames } from \"../data/consts\";\r\nimport { MoveIntent } from \"../components/intent/MoveIntent\";\r\nimport { AttackIntent } from \"../components/intent/AttackIntent\";\r\nimport { InteractIntent } from \"../components/intent/InteractIntent\";\r\nimport { WaitIntent } from \"../components/intent/WaitIntent\";\r\n\r\nexport class InputSystem {\r\n  constructor(\r\n    private entityManager: EntityManager,\r\n    private playerId: number\r\n  ) { }\r\n\r\n  public update(dt: number) {\r\n    for (const eid of this.entityManager.getEntityWithComponent(InputComponent)) {\r\n      const { entity, target } = this.entityManager.getComponent(eid, InputComponent)!;\r\n      this.entityManager.addComponent(entity, new MoveIntent(target), MoveIntent);\r\n      this.entityManager.removeEntity(eid);\r\n    }\r\n\r\n    /*const inputEntities = this.entityManager.getEntityWithComponent(InputComponent);\r\n\r\n    for (const inputEntityId of inputEntities) {\r\n      const input = this.entityManager.getComponent(inputEntityId, InputComponent)!;\r\n      const actorId = input.entity;\r\n      const target = input.target;\r\n\r\n      switch (input.type) {\r\n        case InputNames.Move:\r\n          this.entityManager.addComponent(\r\n            actorId,\r\n            new MoveIntent(target),\r\n            MoveIntent\r\n          );\r\n          break;\r\n\r\n        case InputNames.Attack:\r\n          this.entityManager.addComponent(\r\n            actorId,\r\n            new AttackIntent(target),\r\n            AttackIntent\r\n          );\r\n          break;\r\n\r\n        case InputNames.Interact:\r\n          this.entityManager.addComponent(\r\n            actorId,\r\n            new InteractIntent(target),\r\n            InteractIntent\r\n          );\r\n          break;\r\n\r\n        case InputNames.Wait:\r\n          this.entityManager.addComponent(\r\n            actorId,\r\n            new WaitIntent(),\r\n            WaitIntent\r\n          );\r\n          break;\r\n      }\r\n\r\n      this.entityManager.removeEntity(inputEntityId);\r\n    }*/\r\n  }\r\n}\r\n"]}