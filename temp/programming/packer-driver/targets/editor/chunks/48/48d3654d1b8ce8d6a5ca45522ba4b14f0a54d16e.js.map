{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/core/GameManager.ts"],"names":["GameManager","EntityManager","RenderSystem","RoomSystem","InputSystem","PlayerTag","Health","Damage","InputComponent","Position","InputNames","MovementSystem","TrapSystem","constructor","entityManager","prefabs","roomTemplate","gameRoot","tilesLayer","entityLayer","playerLayer","playerId","tileSize","createPlayer","id","createEntity","addComponent","initializeRoomTemplate","templates","initializeSystems","renderSystem","roomSystem","inputSystem","movementSystem","trapSystem","setPrefabs","getPrefab","name","setGameRoot","getPlayerEntityId","onTileTapped","pos","inputEntity","input","Move","updateSystems","dt","update"],"mappings":"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","sourcesContent":["import { Prefab, Node } from \"cc\";\nimport { InputType, PrefabType, RoomTemplate } from \"../data/types\";\nimport { EntityManager } from \"./EntityManager\";\nimport { RenderSystem } from \"../systems/RenderSystem\";\nimport { RoomSystem } from \"../systems/RoomSystem\";\nimport { InputSystem } from \"../systems/InputSystem\";\nimport { PlayerTag } from \"../components/Tag/PlayerTag\";\nimport { Health } from \"../components/Health\";\nimport { Damage } from \"../components/Damage\";\nimport { InputComponent } from \"../components/core/InputComponent\";\nimport { Position } from \"../components/Position\";\nimport { InputNames } from \"../data/consts\";\nimport { MovementSystem } from \"../systems/MovementSystem\";\nimport { TrapSystem } from \"../systems/TrapSystem\";\n\nexport class GameManager {\n    private entityManager: EntityManager;\n    private prefabs: Record<PrefabType, Prefab> = {} as Record<PrefabType, Prefab>;\n    private roomTemplate: RoomTemplate[] = [];\n    private gameRoot: Node = null!;\n    private tilesLayer: Node = null!;\n    private entityLayer: Node = null!;\n    private playerLayer: Node = null!;\n\n    public renderSystem!: RenderSystem;\n    public roomSystem!: RoomSystem;\n    private inputSystem!: InputSystem;\n    private movementSystem!: MovementSystem;\n    private trapSystem!: TrapSystem;\n\n    private playerId: number | null = null;\n\n    public tileSize: number = 64;\n\n    constructor() {\n        this.entityManager = new EntityManager();\n    }\n\n    createPlayer() {\n        const id = this.entityManager.createEntity();\n        this.entityManager.addComponent(id, new PlayerTag(), PlayerTag);\n        this.entityManager.addComponent(id, new Position(0, 0), Position);\n        this.entityManager.addComponent(id, new Health(100), Health);\n        this.entityManager.addComponent(id, new Damage(10), Damage);\n        this.playerId = id;\n    }\n\n    /*  Паттерн синглтона через геттер (я использовал экспорт в Game)\n    private static _instance: GameManager;\n    static get instance(): GameManager {\n      if (!this._instance) {\n        this._instance = new GameManager();\n      }\n      return this._instance;\n    }\n    private constructor() {}*/\n\n    initializeRoomTemplate(templates: RoomTemplate[]) {\n        this.roomTemplate = templates;\n    }\n\n    initializeSystems() {\n        this.renderSystem = new RenderSystem(\n            this.entityManager, this.prefabs, this.gameRoot,\n            this.tilesLayer, this.entityLayer, this.playerLayer);\n        this.roomSystem = new RoomSystem(this.entityManager, this.roomTemplate, this.playerId);\n        this.inputSystem = new InputSystem(this.entityManager, this.playerId);\n        this.movementSystem = new MovementSystem(this.entityManager, this.roomTemplate);\n        this.trapSystem = new TrapSystem(this.entityManager);\n    }\n\n    setPrefabs(prefabs: Record<PrefabType, Prefab>) {\n        this.prefabs = prefabs;\n    }\n\n    getPrefab(name: PrefabType): Prefab | null {\n        return this.prefabs[name] || null;\n    }\n\n    setGameRoot(gameRoot: Node, tilesLayer: Node, entityLayer: Node, playerLayer: Node) {\n        this.gameRoot = gameRoot;\n        this.tilesLayer = tilesLayer;\n        this.entityLayer = entityLayer;\n        this.playerLayer = playerLayer;\n    }\n\n    getPlayerEntityId(): number {\n        return this.playerId;\n    }\n\n    onTileTapped(pos: Position) {\n        const inputEntity = this.entityManager.createEntity();\n        const input = new InputComponent(this.playerId, InputNames.Move, pos);\n        this.entityManager.addComponent(inputEntity, input, InputComponent);\n    }\n\n    updateSystems(dt: number) {\n        this.inputSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.renderSystem.update(dt);\n        // this.combatSystem.update(dt);\n    }\n}\n\n"]}