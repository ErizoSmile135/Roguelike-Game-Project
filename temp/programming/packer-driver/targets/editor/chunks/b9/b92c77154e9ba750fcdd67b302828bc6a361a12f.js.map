{"version":3,"sources":["file:///C:/GameECSProject/assets/scripts/core/SceneController.ts"],"names":["_decorator","Component","Prefab","Node","gameManager","initializeGame","ccclass","property","SceneController","type","_ready","onLoad","_instance","start","prefabs","Tile","tilePrefab","Player","playerPrefab","Enemy","enemyPrefab","setPrefabs","setGameRoot","gameRoot","tilesLayer","entityLayer","createPlayer","initializeSystems","roomSystem","createRoom","renderSystem","render","onTileTapped","position","update","deltaTime","updateSystems"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;;AAC/BC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,c,iBAAAA,c;;;;;;;;;OAGhB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;iCAGjBQ,e,WADZF,OAAO,CAAC,iBAAD,C,UAKHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAERK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAERK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAGRK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UAERI,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UAERI,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,sCAhBb,MACaK,eADb,SACqCP,SADrC,CAC+C;AAAA;AAAA;AAAA,eAEnCS,MAFmC,GAE1B,KAF0B;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAkB3CC,QAAAA,MAAM,GAAG;AACLH,UAAAA,eAAe,CAACI,SAAhB,GAA4B,IAA5B;AACH;;AAEDC,QAAAA,KAAK,GAAG;AACJ,gBAAMC,OAAO,GAAG;AACZC,YAAAA,IAAI,EAAE,KAAKC,UADC;AAEZC,YAAAA,MAAM,EAAE,KAAKC,YAFD;AAGZC,YAAAA,KAAK,EAAE,KAAKC;AAHA,WAAhB;AAMA;AAAA;AAAA,gDAAe,MAAI;AACf;AAAA;AAAA,4CAAYC,UAAZ,CAAuBP,OAAvB;AACA;AAAA;AAAA,4CAAYQ,WAAZ,CAAwB,KAAKC,QAA7B,EAAuC,KAAKC,UAA5C,EAAwD,KAAKC,WAA7D;AACA;AAAA;AAAA,4CAAYC,YAAZ;AACA;AAAA;AAAA,4CAAYC,iBAAZ;AACA;AAAA;AAAA,4CAAYC,UAAZ,CAAuBC,UAAvB;AACA;AAAA;AAAA,4CAAYC,YAAZ,CAAyBC,MAAzB;AACA,iBAAKrB,MAAL,GAAc,IAAd;AACH,WARD;AASH;AAED;AACJ;AACA;AACA;AACA;;;AAEIsB,QAAAA,YAAY,CAACC,QAAD,EAAqB;AAC7B;AAAA;AAAA,0CAAYD,YAAZ,CAAyBC,QAAzB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAI,CAAC,KAAKzB,MAAV,EAAkB;AAClB;AAAA;AAAA,0CAAY0B,aAAZ,CAA0BD,SAA1B;AACH;;AArD0C,O,UAC7BvB,S;;;;;iBAIe,I;;;;;;;iBAEE,I;;;;;;;iBAED,I;;;;;;;iBAGL,I;;;;;;;iBAEE,I;;;;;;;iBAEC,I","sourcesContent":["import { _decorator, Component, Prefab, Node, Vec2 } from 'cc';\nimport { gameManager, initializeGame } from './Game';\nimport { InputComponent } from '../components/core/InputComponent';\nimport { Position } from '../components/Position';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SceneController')\nexport class SceneController extends Component {\n    public static _instance: SceneController;\n    private _ready = false;\n    \n    @property({ type: Prefab }) \n    private tilePrefab: Prefab = null!;\n    @property({ type: Prefab }) \n    private playerPrefab: Prefab = null!;\n    @property({ type: Prefab }) \n    private enemyPrefab: Prefab = null!;\n\n    @property({ type: Node })\n    private gameRoot: Node = null!;\n    @property({ type: Node })\n    private tilesLayer: Node = null!;\n    @property({ type: Node })\n    private entityLayer: Node = null!;\n\n    onLoad() {\n        SceneController._instance = this;\n    }\n\n    start() {\n        const prefabs = {\n            Tile: this.tilePrefab,\n            Player: this.playerPrefab,\n            Enemy: this.enemyPrefab\n        };\n\n        initializeGame(()=>{\n            gameManager.setPrefabs(prefabs);\n            gameManager.setGameRoot(this.gameRoot, this.tilesLayer, this.entityLayer); \n            gameManager.createPlayer();\n            gameManager.initializeSystems();\n            gameManager.roomSystem.createRoom();\n            gameManager.renderSystem.render();\n            this._ready = true;   \n        })\n    }\n\n    /*onTap(position: Position) {\n        const playerId = gameManager.getPlayerEntityId();\n        const input = new InputComponent(playerId, 'move', position);\n        gameManager.handleInput(input);\n    }*/\n\n    onTileTapped(position: Position) {\n        gameManager.onTileTapped(position);\n    }\n\n    update(deltaTime: number) {\n        if (!this._ready) return;\n        gameManager.updateSystems(deltaTime);\n    }\n}\n\n"]}